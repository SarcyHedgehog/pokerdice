# Name that will appear in the GitHub Actions tab
name: Deploy Poker Dice to sarcastichedgehog.com

on:
  # Run this workflow every time a change is pushed to the main branch
  push:
    branches:
      - main
  # Also allow this to be run manually
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the pokerdice game repository
      - name: Checkout pokerdice game repository
        uses: actions/checkout@v4
        # No path needed, it checks out to the root directory

      # Step 2: Create the production config.js file from secrets
      - name: Create config.js for Poker Dice
        run: |
          echo "Generating config.js from secrets..."
          echo "window.APP_CONFIG = {" > config.js
          echo "  API_KEY: \"${{ secrets.MULTISYNQ_API_KEY }}\"," >> config.js
          echo "  APP_ID: \"${{ secrets.MULTISYNQ_APP_ID }}\"," >> config.js
          # The BASE_URL should be the final production URL
          echo "  BASE_URL: \"https://sarcastichedgehog.com/dice\"" >> config.js
          echo "};" >> config.js

      # Step 3: Checkout your main website repository into a subfolder
      - name: Checkout sarcastichedgehog.com website repository
        uses: actions/checkout@v4
        with:
          repository: SarcyHedgehog/sarcastichedgehog.com
          path: website_repo
          # Use the same Personal Access Token you use for your other games
          token: ${{ secrets.GH_PAGES_DEPLOY_TOKEN }}

      # Step 4: Copy the game files into the website repository's /dice folder
      - name: Copy game files to website repository
        run: |
          # The target directory on your main website
          TARGET_DIR="./website_repo/dice"
          mkdir -p "$TARGET_DIR"

          echo "Copying core files..."
          cp ./index.html "$TARGET_DIR/"
          cp ./manifest.json "$TARGET_DIR/"
          cp ./sw.js "$TARGET_DIR/"
          cp ./config.js "$TARGET_DIR/"
          cp ./config.example.js "$TARGET_DIR/"
          cp ./README.md "$TARGET_DIR/"
          cp ./LICENSE "$TARGET_DIR/"

          echo "Copying asset folders..."
          if [ -d "./textures" ]; then
            cp -r ./textures "$TARGET_DIR/"
          fi
          if [ -d "./icons" ]; then
            cp -r ./icons "$TARGET_DIR/"
          fi

        shell: bash

      # Step 5: Commit the new/updated files to the website repository
      - name: Commit and push changes to website repository
        env:
          GIT_USER_NAME: "GitHub Actions Bot"
          GIT_USER_EMAIL: "actions@github.com"
        run: |
          cd ./website_repo
          if [[ -z $(git status --porcelain) ]]; then
            echo "No changes to commit."
          else
            git config user.name "${GIT_USER_NAME}"
            git config user.email "${GIT_USER_EMAIL}"
            git add .
            git commit -m "Deploy Poker Dice game update from pokerdice repository"
            git push origin main
          fi
